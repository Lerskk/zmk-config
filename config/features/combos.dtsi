/*
*
* Copyright (c) 2022 Rafael Romão
* SPDX-License-Identifier: MIT
*
*/

/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LTP LTR LTM LTI LTC │ │ RTC RTI RTM RTR RTP │
  │ LHP LHR LHM LHI LHC │ │ RHC RHI RHM RHR RHP │
  │ LBP LBR LBM LBI LBC │ │ RBC RBI RBM RBR RBP │
  ╰───────╮ L0  L1  L2  │ │ R2  R1  R0  ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

/ {
    #define COMBO_TERM 50

    #define COMBO(NAME, KEYS, BINDINGS, LAYERS) \
        NAME { \
            timeout-ms = <COMBO_TERM>; \
            layers = <LAYERS>; \
            key-positions = <KEYS>; \
            bindings = <BINDINGS>; \
        };

    #define SMALL_COMBO(NAME, KEYS, BINDINGS, LAYERS) \
        NAME { \
            timeout-ms = <20>; \
            layers = <LAYERS>; \
            key-positions = <KEYS>; \
            bindings = <BINDINGS>; \
        };

    combos {
        compatible = "zmk,combos";

        SMALL_COMBO(cb_escc, LTM LTR, &kp ESC, DEFAULT SYMBOLS NUMBER)

        SMALL_COMBO(cb_k, RHI RHM, &kp K, SYMBOLS NUMBER)
        SMALL_COMBO(cb_j, RHM RHR, &kp J, SYMBOLS NUMBER)
        COMBO(cb_g, RHI RHR RHM, &kp LS(G), SYMBOLS NUMBER)

        SMALL_COMBO(cb_o_esc, RHI RHM, &mc_o_esc, MEDIA)
        SMALL_COMBO(cb_sft_o_esc, RHM RHR, &mc_sft_o_esc, MEDIA)

        COMBO(cb_enter_l, LHM LHR LHI, &ht_enter 0 0, DEFAULT SYMBOLS NUMBER CURSOR)
        COMBO(cb_tab_l, LTM LTR LTI, &kp TAB, DEFAULT SYMBOLS NUMBER CURSOR)
        COMBO(cb_del, LBR LBM LBI, &kp DEL, DEFAULT SYMBOLS NUMBER CURSOR)
    };

    #define COMBO_MUST_TAP(NAME, HOLD, TAP) \
        NAME##hold: NAME##hold { \
            compatible = "zmk,behavior-macro"; \
            #binding-cells = <0>; \
            wait-ms = <0>; \
            tap-ms = <0>; \
            bindings \
                = <&macro_press HOLD> \
                , <&macro_pause_for_release> \
                , <&macro_release HOLD> \
                ; \
        }; \
        NAME##tap: NAME##tap {  \
            compatible = "zmk,behavior-macro";  \
            #binding-cells = <0>; \
            wait-ms = <0>; \
            tap-ms = <0>; \
            bindings = <&macro_tap TAP>; \
        }; \
        NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            flavor = "hold-preferred"; \
            bindings = <&NAME##hold>, <&NAME##tap>; \
        };

    combo_must_tap {
      COMBO_MUST_TAP(ht_enter , &kp LSHFT &kp LCTL &kp LALT          , &kp ENTER)
    };
};
