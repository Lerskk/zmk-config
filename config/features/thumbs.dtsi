/*
*
* Copyright (c) 2022 Rafael Rom√£o
* SPDX-License-Identifier: MIT
*
*/

/ {
  #define SMART_REPEAT(NAME, LABEL, DEFAULT) \
    NAME: NAME { \
      compatible = "zmk,behavior-antecedent-morph"; \
      label = LABEL; \
      #binding-cells = <0>; \
      max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>; \
      defaults = <DEFAULT>; \
      antecedents = < \
                     A             AACU_TERM     ATIL_TERM     ACIR_TERM     AGRV_TERM        B              C             C_CEDIL          D           \
                     E             EACU_TERM     ECIR_TERM     F             G                H              I             IACU_TERM        J           \
                     K             L             M             N             O                OACU_TERM      OTIL_TERM     OCIR_TERM        P           \
                     Q             QU_TERM       R             S             T                U              UACU_TERM     V                W           \
                     X             Y             Z             DOT           \
                     LS(A)         C_AACU_TERM   C_ATIL_TERM   C_ACIR_TERM   C_AGRV_TERM      LS(B)          LS(C)         LS(C_CEDIL)      LS(D)       \
                     LS(E)         C_EACU_TERM   C_ECIR_TERM   LS(F)         LS(G)            LS(H)          LS(I)         C_IACU_TERM      LS(J)       \
                     LS(K)         LS(L)         LS(M)         LS(N)         LS(O)            C_OACU_TERM    C_OTIL_TERM   C_OCIR_TERM      LS(P)       \
                     LS(Q)         C_QU_TERM     LS(R)         LS(S)         LS(T)            LS(U)          C_UACU_TERM   LS(V)            LS(W)       \
                     LS(X)         LS(Y)         LS(Z)         \
                     >; \
      bindings =    < \
                     &kp V         &kp V         &kp O         &kp N         &mc_qu           &key_repeat    &key_repeat   &tc_otiles       &key_repeat \
                     &key_repeat   &kp V         &kp E         &key_repeat   &key_repeat      &tc_oes        &tc_ng        &kp V            &ac_aacu    \
                     &tc_ey        &key_repeat   &key_repeat   &key_repeat   &key_repeat      &kp V          &tc_es        &kp O            &key_repeat \
                     &key_repeat   &ac_ecir      &key_repeat   &key_repeat   &key_repeat      &kp Y          &kp V         &ac_aacu         &tc_hy      \
                     &ac_aacu      &tc_ou        &key_repeat   &tc_com       \
                     &kp LS(V)     &kp LS(V)     &kp LS(O)     &kp LS(N)     &mc_qu_c         &key_repeat    &key_repeat   &tc_otiles_c     &key_repeat \
                     &key_repeat   &kp LS(V)     &kp LS(E)     &key_repeat   &key_repeat      &tc_oes_c      &tc_ng_c      &kp LS(V)        &ac_aacu_c    \
                     &tc_ey_c      &key_repeat   &key_repeat   &key_repeat   &key_repeat      &kp LS(V)      &tc_es_c      &kp LS(O)        &key_repeat \
                     &key_repeat   &ac_ecir_c    &key_repeat   &key_repeat   &key_repeat      &kp LS(Y)      &kp LS(V)     &ac_aacu_c       &tc_hy_c      \
                     &ac_aacu_c    &tc_ou_c      &key_repeat   \
                     >; \
  };

  #define SMART_MAGIC(NAME, LABEL, DEFAULT) \
    NAME: NAME { \
      compatible = "zmk,behavior-antecedent-morph"; \
      label = LABEL; \
      #binding-cells = <0>; \
      max-delay-ms = <ADAPTIVE_KEY_TIMEOUT>; \
      defaults = <DEFAULT>; \
      antecedents = < \
                     A             AACU_TERM     ATIL_TERM     ACIR_TERM     AGRV_TERM       B                             C_CEDIL         D         \
                     E             EACU_TERM     ECIR_TERM     F                                           I               IACU_TERM                 \
                     K             L             M             N                             OACU_TERM     OTIL_TERM       OCIR_TERM       P         \
                     Q             QU_TERM       R                           T               U             UACU_TERM       V               W         \
                     X             DOT           \
                     LS(A)         C_AACU_TERM   C_ATIL_TERM   C_ACIR_TERM   C_AGRV_TERM     LS(B)                         LS(C_CEDIL)     LS(D)     \
                     LS(E)         C_EACU_TERM   C_ECIR_TERM   LS(F)                                       LS(I)           C_IACU_TERM               \
                     LS(K)         LS(L)         LS(M)         LS(N)                         C_OACU_TERM   C_OTIL_TERM     C_OCIR_TERM     LS(P)     \
                     LS(Q)         C_QU_TERM     LS(R)                       LS(T)           LS(U)         C_UACU_TERM     LS(V)           LS(W)     \
                     LS(X)         \
                     >; \
      bindings =    < \
                     &kp O         &kp X         &kp O         &kp M         &mc_qu          &kp Y                         &tc_atilo       &kp Y     \
                     &kp U         &kp U         &kp X         &kp Y                                       &tc_smart_i     &kp Z                     \
                     &kp W         &kp H         &kp S         &kp F                         &kp X         &kp E           &kp V           &kp T     \
                     &key_repeat   &ac_iacu      &kp L                       &kp W           &kp E         &kp Z           &ac_iacu        &kp K     \
                     &ac_iacu      &kp SLASH     \
                     &kp LS(O)     &kp LS(X)     &kp LS(O)     &kp LS(M)     &mc_qu_c        &kp LS(Y)                     &tc_atilo_c     &kp LS(Y) \
                     &kp LS(U)     &kp LS(U)     &kp LS(X)     &kp LS(Y)                                   &tc_smart_i     &kp LS(Z)                 \
                     &kp LS(W)     &kp LS(H)     &kp LS(S)     &kp LS(F)                     &kp LS(X)     &kp LS(E)       &kp LS(V)       &kp LS(T) \
                     &key_repeat   &ac_iacu_c    &kp LS(L)                   &kp LS(W)       &kp LS(E)     &kp LS(Z)       &ac_iacu_c      &kp LS(K) \
                     &ac_iacu_c    \
                     >; \
  };

  custom_caps_word: custom_caps_word {
        compatible = "zmk,behavior-caps-word";
        ignore-alphas;
        ignore-modifiers;
        #binding-cells = <0>;  
        layers = <CASE_A1>;
        continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SQT TILDE CARET GRAVE >;
  };

  shift_caps_word: shift_caps_word {
    compatible = "zmk,behavior-mod-morph";
    label = "shift_caps_word";
    #binding-cells = <0>;
    bindings = <&sk LSHFT>, <&custom_caps_word>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
  };

  SMART_MAGIC(smart_shift_magic, "smart_shift_magic", &shift_caps_word)

  ht_magic: ht_magic {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    tapping-term-ms = <TAPPING_TERM>;
    flavor = "tap-preferred";
    quick-tap-ms = <QUICK_TAP_TERM>;
    bindings = <&mo>, <&smart_shift_magic>;
  };
}
