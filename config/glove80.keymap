/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define DEFAULT 0
#define SYMBOLS 1
#define CURSOR 2
#define NUMBER 3
#define FUNCTION 4
#define QWERTY 5
#define LOWER 6
#define MAGIC 7

#ifndef LAYER_Lower
#define LAYER_Lower 0
#endif


/ {
  behaviors {

    #ifndef PINKY_FINGER_MOD
    #define PINKY_FINGER_MOD LGUI
    #endif

    #ifndef RING1_FINGER_MOD
    #define RING1_FINGER_MOD LALT
    #endif

    #ifndef RING2_FINGER_MOD
    #define RING2_FINGER_MOD RALT
    #endif

    #ifndef MIDDY_FINGER_MOD
    #define MIDDY_FINGER_MOD LSFT
    #endif

    #ifndef INDEX_FINGER_MOD
    #define INDEX_FINGER_MOD LCTL
    #endif

    #define RIGHT_HAND_KEYS     \
                                           5  6  7  8  9 \
                                       16 17 18 19 20 21 \
                                       28 29 30 31 32 33 \
                                       40 41 42 43 44 45 \
                                       58 59 60 61 62 63 \
                                          75 76 77 78 79
    #define THUMB_KEYS          \
                        69 52       57 74                \
                         70 53     56 73                 \
                          71 54   55 72

    #ifndef HOMEY_HOLDING_TYPE
    #define HOMEY_HOLDING_TYPE "tap-preferred"
    #endif

    #ifndef HOMEY_HOLDING_TIME
    #define HOMEY_HOLDING_TIME 250 // TAPPING_TERM + ALLOW_CROSSOVER_AFTER
    #endif
    
    #ifndef HOMEY_REPEAT_DECAY
    #define HOMEY_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat
    #endif

    left_pinky: homey_left_pinky {
      compatible = "zmk,behavior-hold-tap";
      flavor = HOMEY_HOLDING_TYPE;
      hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS>;
      hold-trigger-on-release; // wait for other home row mods
      tapping-term-ms = <HOMEY_HOLDING_TIME>;
      // quick-tap-ms = <HOMEY_REPEAT_DECAY>;
      require-prior-idle-ms = <125>;
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
    };

    #define LeftPinky(key) left_pinky PINKY_FINGER_MOD key
    #define LeftRing1(key) left_pinky RING1_FINGER_MOD key
    #define LeftRing2(key) left_pinky RING2_FINGER_MOD key
    #define LeftMiddy(key) left_pinky MIDDY_FINGER_MOD key
    #define LeftIndex(key) left_pinky INDEX_FINGER_MOD key

    #define RightPinky(key) left_pinky PINKY_FINGER_MOD key
    #define RightRing1(key) left_pinky RING1_FINGER_MOD key
    #define RightRing2(key) left_pinky RING2_FINGER_MOD key
    #define RightMiddy(key) left_pinky MIDDY_FINGER_MOD key
    #define RightIndex(key) left_pinky INDEX_FINGER_MOD key

    lower: lower {
      compatible = "zmk,behavior-tap-dance";
      label = "LAYER_TAP_DANCE";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mo LOWER>, <&to LOWER>;
    };

    #define UNDO LC(Z) 
    #define REDO LC(LS(Z)) 

    #define SBAR LC(K) 
    #define SURL LC(L) 

    #define CUT LC(X) 
    #define COPY LC(C) 
    #define PASTE LC(V) 

    #define FIND LC(F) 
    #define FPRE LC(LS(G)) 
    #define FNEX LC(G) 

    #define SALL LC(A) 


    cappy: capsword_and_capslock {
      compatible = "zmk,behavior-hold-tap";
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      #binding-cells = <2>;
      bindings = <&kp>, <&caps_word>;
    };


    behavior_caps_word {
      continue-list = <
        UNDERSCORE MINUS
        BACKSPACE DELETE
        N1 N2 N3 N4 N5 N6 N7 N8 N9 N0
      >;
    };

    parang_left: left_parenthesis_and_less_than {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp LPAR>, <&kp LT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    parang_right: right_parenthesis_and_greater_than {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp RPAR>, <&kp GT>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    thumb: thumb_layer_access {
      compatible = "zmk,behavior-hold-tap";
      flavor = "balanced";
      tapping-term-ms = <270>;
      quick-tap-ms = <300>; // enable repeat
      #binding-cells = <2>;
      bindings = <&mo>, <&kp>;
    };

    thumb_repeat: thumb_layer_access_repeat {
      compatible = "zmk,behavior-hold-tap";
      flavor = "balanced";
      tapping-term-ms = <270>;
      quick-tap-ms = <300>; // enable repeat
      #binding-cells = <2>;
      bindings = <&mo>, <&key_repeat>;
    };

    // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
    // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
    layer_td: tap_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&mo LOWER>, <&to LOWER>;
    };
  };

  macros {
      bt_0: bt_profile_macro_0 {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;

          bindings
              = <&out OUT_BLE>,
                <&bt BT_SEL 0>;
      };

      bt_1: bt_profile_macro_1 {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&out OUT_BLE>,
                <&bt BT_SEL 1>;
      };

      bt_2: bt_profile_macro_2 {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&out OUT_BLE>,
                <&bt BT_SEL 2>;
      };

      bt_3: bt_profile_macro_3 {
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&out OUT_BLE>,
                <&bt BT_SEL 3>;
      };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &kp F1      &kp F2             &kp F3          &kp F4          &kp F5                                                                                                                           &kp F6           &kp F7           &kp F8          &kp F9      &kp F10
        &kp EQUAL   &kp N1             &kp N2          &kp N3          &kp N4          &kp N5                                                                                                 &kp N6    &kp N7           &kp N8           &kp N9          &kp N0      &kp MINUS
        &kp TAB     &kp B              &LeftRing2(L)   &kp D           &kp W           &kp Z                                                                                                  &kp SQT   &kp F            &kp O            &RightRing1(U)  &kp J       &kp BSLH
        &cappy CAPSLOCK 0     &LeftPinky(N)      &LeftRing1(R)   &LeftMiddy(T)   &LeftIndex(S)   &kp G                                                                                                  &kp Y     &RightIndex(H)   &RightMiddy(A)   &RightRing1(E)  &RightPinky(I)       &kp RSHFT
        &kp GRAVE   &kp Q    &kp X     &kp M           &kp C           &kp V           &thumb FUNCTION TAB    &kp DOWN              &lower      &lower    &kp LEFT                   &key_repeat   &kp K     &kp P            &kp DOT          &kp COMMA        &kp FSLH   &kp PG_UP
        &mo MAGIC   &kp HOME &kp END   &kp DOWN          &kp UP                       &thumb NUMBER SPACE    &thumb CURSOR ENTER   &lower      &lower    &thumb SYMBOLS ESC   &thumb SYMBOLS BACKSPACE              &kp LEFT           &kp RIGHT         &kp LBKT         &kp RBKT   &kp PG_DN
        >;
    };

    symbols_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &none       &none       &none       &none       &none                                                                                                   &none      &none         &none                  &none                  &none
        &none       &none       &none       &none       &none      &none                                                                            &none       &none      &none         &none                  &none                  &none
        &kp EXCL    &kp COMMA   &kp DOT     &kp COLON   &kp SEMI   &kp QMARK                                                                        &none       &kp LBKT   &kp SQT       &kp DQT                &kp RBKT               &none
        &kp HASH    &kp CARET   &kp EQUAL   &kp UNDER   &kp DLLR   &kp ASTRK                                                                        &kp GRAVE   &kp LPAR   &kp LBRC      &kp RBRC               &kp RPAR               &none
        &kp TILDE   &kp LT      &kp PIPE    &kp MINUS   &kp GT     &kp FSLH    &kp TAB     &kp DOT     &kp ASTRK   &tog SYMBOLS   &none   &none     &none       &kp BSPC   &none         &none                  &none                  &none
        &kp PRCNT   &kp AMPS    &kp AT      &kp BSLH    &kp PLUS               &kp SPACE   &kp ENTER   &kp SEMI    &none          &none   &none                 &kp DEL    &kp LS(TAB)   &kp RING1_FINGER_MOD   &kp PINKY_FINGER_MOD   &none
        >;
    };

    cursor_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &none       &none                  &none                  &none                  &none                                                                                                         &none      &none       &none       &none      &none
        &none       &none                  &none                  &none                  &kp DEL                &kp INS                                                                    &kp INS     &kp DEL    &none       &none       &none      &none
        &kp SBAR    &kp SPACE              &kp REDO               &kp UNDO               &kp BSPC               &kp CUT                                                                    &kp CUT     &kp BSPC   &kp UNDO    &kp REDO    &sk LSHFT  &kp SBAR
        &kp SURL    &kp PINKY_FINGER_MOD   &kp RING1_FINGER_MOD   &kp MIDDY_FINGER_MOD   &kp INDEX_FINGER_MOD   &kp COPY                                                                   &kp COPY    &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT  &kp SURL
        &kp LC(T)   &kp LC(F)              &none                  &none                  &kp SALL               &kp PASTE   &kp TAB   &none   &tog CURSOR   &tog CURSOR    &none   &none   &kp PASTE   &kp HOME   &kp PG_UP   &kp PG_DN   &kp END    &none
        &kp LC(W)   &kp FPRE               &none                  &none                  &kp FNEX                           &none     &none   &none         &none          &none   &none               &none      &none       &none       &none      &none
        >;
    };

    number_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &none       &none                  &none                  &none                  &none                                                                                                          &none      &none      &none       &none       &none
        &none       &none                  &kp D                  &kp E                  &kp F                  &none                                                                       &kp CARET   &kp HASH   &kp DLLR   &kp TILDE   &kp EXCL    &kp PIPE
        &none       &kp X                  &kp A                  &kp B                  &kp C                  &kp Y                                                                       &kp PRCNT   &kp N7     &kp N8     &kp N9      &kp COLON   &kp K
        &none       &kp PINKY_FINGER_MOD   &kp RING1_FINGER_MOD   &kp MIDDY_FINGER_MOD   &kp INDEX_FINGER_MOD   &kp UNDER                                                                   &kp PLUS    &kp N4     &kp N5     &kp N6      &kp MINUS   &kp J
        &none       &sk LSHFT              &kp LC(Z)              &kp BACKSPACE          &kp SPACE              &kp TAB     &none   &none   &none         &kp LT      &kp GT    &kp EQUAL   &kp ASTRK   &kp N1     &kp N2     &kp N3      &kp FSLH    &kp LS(G)
        &none       &none                  &kp LC(LS(Z))          &kp DEL                &kp ENTER                          &none   &none   &tog NUMBER   &kp COMMA   &kp DOT   &kp N0                  &trans     &trans     &trans      &trans      &kp AT
        >;
    };

    function_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &none   &none   &none   &none   &none                                                                                                           &none        &none   &none   &none   &none
        &none   &none   &none   &none   &none   &none                                                                                           &none   &kp C_PLAY   &kp C_PREV   &kp C_NEXT   &kp C_STOP   &kp C_EJECT
        &none   &none   &none   &none   &none   &none                                                                                           &none   &kp F7       &kp  F8   &kp F9   &kp F10   &kp F13
        &none   &kp PINKY_FINGER_MOD   &kp RING1_FINGER_MOD   &kp MIDDY_FINGER_MOD   &kp INDEX_FINGER_MOD   &none                                                                                           &none   &kp F4       &kp  F5   &kp F6   &kp F11   &kp F14
        &none   &none   &none   &none   &none   &none   &none         &none         &tog FUNCTION   &none         &none          &kp C_PP       &none   &kp F1       &kp  F4   &kp F3   &kp F12   &kp F15
        &none   &none   &none   &none   &none           &none         &none         &none           &kp C_MUTE    &kp C_VOL_DN   &kp C_VOL_UP           &none        &none   &none   &none   &none
        >;
    };

    qwerty_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &kp F1         &kp F2   &kp F3      &kp F4      &kp F5                                                                                         &kp F6  &kp F7      &kp F8      &kp F9      &kp F10
        &kp EQUAL      &kp N1   &kp N2      &kp N3      &kp N4      &kp N5                                                                     &kp N6  &kp N7  &kp N8      &kp N9      &kp N0      &kp MINUS
        &kp TAB        &kp Q    &kp W       &kp E       &kp R       &kp T                                                                      &kp Y   &kp U   &kp I       &kp O       &kp P       &kp BSLH
        &kp ESC        &kp A    &kp S       &kp D       &kp F       &kp G                                                                      &kp H   &kp J   &kp K       &kp L       &kp SEMI    &kp SQT
        &kp GRAVE      &kp Z    &kp X       &kp C       &kp V       &kp B   &kp LSHFT   &kp LCTRL   &layer_td  &kp LGUI  &kp RCTRL &kp RSHFT   &kp N   &kp M   &kp COMMA   &kp DOT     &kp FSLH    &kp PG_UP
        &mo MAGIC      &kp HOME &kp END     &kp LEFT    &kp RIGHT           &kp BSPC    &kp DEL     &kp LALT   &kp RALT  &kp RET   &kp SPACE           &kp UP  &kp DOWN    &kp LBKT    &kp RBKT    &kp PG_DN
        >;
    };

    lower_layer {
        // ---------------------------------------------------------------------------------------------------------------------------------
        // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
        // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
        // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
        // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
        // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
        // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

        bindings = <
        &none   &none   &none   &none   &none                                                                                                  &none   &none   &none   &none   &none
        &none   &none   &none   &none   &none   &none                                                                                  &none   &none   &none   &none   &none   &none
        &none   &none   &none   &none   &none   &none                                                                                  &none   &none   &none   &none   &none   &none
        &none   &none   &none   &none   &none   &none                                                                                  &none   &none   &none   &none   &none   &none
        &none   &none   &none   &none   &none   &none   &none         &none         &tog LOWER   &tog LOWER    &none   &none           &none   &none   &none   &none   &none   &none
        &none   &none   &none   &none   &none           &tog CURSOR   &tog NUMBER   &none        &none         &none   &tog SYMBOLS            &none   &none   &none   &none   &none
        >;
    };

    magic_layer {
        bindings = <
        &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &none
        &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
        &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
        &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
        &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
        &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
        >;
    };
  };
};
